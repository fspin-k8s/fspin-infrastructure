#!/bin/bash
# Publish a Build
# - Clean out old releases
# - Create a release candidate for the mirrors to sync
# - Clean out all old builds
set -x
source /opt/release_id && \
RELEASE_STRING=`echo ${RELEASE_ID}|sed 's/-//g'` && \
RESULTS_LOCATION="gs://build-results.fspin.org/releases/" && \
TMP_LOCATION="gs://build-results.fspin.org/${RELEASE_ID}/" && \
pushd ${RELEASE_ID} && \
echo "Downloading checksums for ${RELEASE_ID}..." && \
gsutil cp gs://build-results.fspin.org/*/*/CHECKSUM512-*${RELEASE_STRING}* . && \
echo "Combining checksums for ${RELEASE_ID}..." && \
cat CHECKSUM512-* >> CHECKSUM512-${RELEASE_STRING} && \
echo "Downloading tracker hashfiles for ${RELEASE_ID}..." && \
gsutil cp gs://build-results.fspin.org/*/*/*${RELEASE_STRING}*-torrenthash . && \
echo "Creating tracker hashfile for ${RELEASE_ID}..." && \
cat *-torrenthash >> torrenthashes-${RELEASE_STRING} && \
echo "Preparing ${RELEASE_ID} in ${TMP_LOCATION}..." && \
gsutil cp CHECKSUM512-${RELEASE_STRING} ${TMP_LOCATION} && \
gsutil cp torrenthashes-${RELEASE_STRING} ${TMP_LOCATION} && \
gsutil mv gs://build-results.fspin.org/{live,source}/*${RELEASE_ID}*/*.iso ${TMP_LOCATION} && \
gsutil mv gs://build-results.fspin.org/live/*${RELEASE_ID}*/*.torrent ${TMP_LOCATION} && \
gsutil cp README.md ${TMP_LOCATION} && \
echo "Cleaning out old releases and builds..." && \
gsutil rm -r gs://build-results.fspin.org/{live,source,releases} && \
echo "Publishing ${RELEASE_ID} to ${RESULTS_LOCATION}" && \
gsutil mv ${TMP_LOCATION} ${RESULTS_LOCATION} && \
echo "SUCCESS: Results located at ${RESULTS_LOCATION}/${RELEASE_ID}/"
